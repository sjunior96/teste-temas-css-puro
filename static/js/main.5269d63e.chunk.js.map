{"version":3,"sources":["components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["className","useState","currentTheme","setCurrentTheme","id","nome","temas","JSON","stringify","filter","tema","value","onChange","e","target","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"gQAGe,aACX,OACI,qBAAKA,UAAU,MAAf,SACI,+CCFG,aAAO,IAAD,EACqBC,mBAAS,SAD9B,mBACZC,EADY,KACEC,EADF,OAGOF,mBAAS,CAAC,CAAEG,GAAI,QAASC,KAAM,cAAgB,CAAED,GAAI,OAAQC,KAAM,iBAH1E,mBAGZC,EAHY,UAKnB,OACE,sBAAKN,UAAS,UAAKE,GAAnB,UACE,uCACA,4BAAIA,IACJ,4BAAIK,KAAKC,UAAUF,EAAMG,QAAO,SAACC,GAAD,OAAUA,EAAKN,KAAOF,KAAc,MACpE,cAAC,EAAD,IAEA,wBAAQS,MAAOT,EAAcU,SAAU,SAACC,GAAD,OAAOV,EAAgBU,EAAEC,OAAOH,QAAvE,SACGL,EAAMS,KAAI,SAACL,GAAD,OAAU,wBAAsBC,MAAOD,EAAKN,GAAlC,SAAuCM,EAAKL,MAA/BK,EAAKN,aCLhCY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.5269d63e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Button.css';\r\n\r\nexport default () => {\r\n    return (\r\n        <div className=\"btn\">\r\n            <button>Button</button>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\nimport './themes/themes.css';\nimport Button from './components/Button';\n\nexport default () => {\n  const [currentTheme, setCurrentTheme] = useState(\"light\");\n\n  const [temas, setTemas] = useState([{ id: 'light', nome: \"Tema Claro\" }, { id: 'dark', nome: \"Tema Escuro\" }]);\n\n  return (\n    <div className={`${currentTheme}`}>\n      <h1>Temas</h1>\n      <p>{currentTheme}</p>\n      <p>{JSON.stringify(temas.filter((tema) => tema.id === currentTheme)[0])}</p>\n      <Button />\n\n      <select value={currentTheme} onChange={(e) => setCurrentTheme(e.target.value)}>\n        {temas.map((tema) => <option key={tema.id} value={tema.id}>{tema.nome}</option>)}\n      </select>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}